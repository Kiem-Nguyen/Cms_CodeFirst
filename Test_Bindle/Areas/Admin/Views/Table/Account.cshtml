@using Test_Bindle.Models
@model List<Test_Bindle.Models.User>

@{
    ViewBag.Title = "Table Basic";
    Layout = "../Shared/_ShareLayout.cshtml";
    var count = 1;
    var countUsr = 1;
    var db = new Cms();
    var listRole = db.Roles.Where(x => !x.Type.Equals("ban")).ToList();

    var secion = Session["products"].ToString().Trim();
    var acountLogin = db.Users.FirstOrDefault(x => x.UserName.Equals(secion));
}

@{
    <div class="breadcrumbs">
        <div class="col-sm-4">
            <div class="page-header float-left">
                <div class="page-title">
                    <h1>Dashboard</h1>
                </div>
            </div>
        </div>
        <div class="col-sm-8">
            <div class="page-header float-right">
                <div class="page-title">
                    <ol class="breadcrumb text-right">
                        <li><a href="@Url.Action($"Home",$"HomeAdmin")">Dashboard</a></li>
                        <li><a href="">Table</a></li>
                        <li class="active">User table</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="content mt-6">
        <div class="animated fadeIn">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <strong class="card-title">Role Table</strong>
                        </div>
                        <div class="card-body">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Id</th>
                                        <th scope="col">Name Role</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        foreach (var role in listRole)
                                        {
                                            <tr>
                                                <th scope="row">@(countUsr)</th>
                                                <td>@role.Id</td>
                                                <td>@role.Type</td>
                                                <td> Edit - Delete</td>
                                            </tr>
                                            countUsr += 1;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <strong class="card-title">User Table</strong>
                            <button type="button" style="color: #333;background-color: #fff; border-color: #ccc; float: right" class="btn btn-default btn-sm" id="AddAccount"> Add new</button>
                        </div>
                        <div class="card-body">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Id</th>
                                        <th scope="col">User Name</th>
                                        <th scope="col">Email</th>
                                        <th scope="col">Type Role</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        foreach (var user in Model)
                                        {
                                            <tr>
                                                <th scope="row">@(count)</th>
                                                <td>@user.Id</td>
                                                <td>@user.UserName.Trim()</td>
                                                <td>@(user.Email==null ? "" : user.Email.Trim())</td>
                                                <td>@(listRole.FirstOrDefault(x => x.Id == user.RoleType) != null ? listRole.FirstOrDefault(x => x.Id == user.RoleType)?.Type : "not permission")</td>
                                                <td> <label class="edit-account" style="cursor: pointer" data-id="@user.Id">Edit</label> - <b class="delete-account" data-id="@user.Id">Delete</b></td>
                                            </tr>
                                            count += 1;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- .animated -->
    </div><!-- .content -->


    <!-- The Modal -->
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3 style="text-align: center" id="titlePopup">Add New User</h3>
            <form method="post" action="@Url.Action($"RegisterByAdmin", $"Table")" onsubmit="return validateFormAdd()">
                <div class="form-group">
                    <label>UserName</label>
                    <input type="text" class="form-control" name="UserName" placeholder="UserName">
                </div>
                <div class="form-group">
                    <label>PassWord</label>
                    <input type="text" class="form-control" name="PassWord" placeholder="Password default is 1 if null">
                </div>
                <div class="form-group">
                    <label>Email address</label>
                    <input type="email" class="form-control" name="Email" placeholder="Email">
                </div>
                <div class="form-group">
                    <label>Role</label>
                    <select class="form-control listRoleAdd">
                        @{
                            foreach (var role in listRole)
                            {
                                <option value="@role.Id">@role.Type</option>
                            }
                        }
                    </select>
                </div>
                <input type="hidden" class="form-control" name="RoleType">
                <input type="hidden" class="form-control" name="IdUser">
                <button type="submit" class="btn btn-success btn-submit">Submit</button>
            </form>
        </div>
    </div>

    <!-- The Modal Edit -->
    <div id="myModalEdit" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3 style="text-align: center" id="titlePopup">Edit user</h3>
            <form method="post" action="@Url.Action($"EditAccount", $"Table")" onsubmit="return validateFormEdit()">
                <div class="form-group">
                    <label>UserName</label>
                    <input type="text" class="form-control" name="UserName" placeholder="UserName" readonly>
                </div>
                <div class="form-group">
                    <label>PassWord</label>
                    <input type="text" class="form-control" name="PassWord" placeholder="Password default is 1 if null">
                </div>
                <div class="form-group">
                    <label>Email address</label>
                    <input type="email" class="form-control" name="Email" placeholder="Email">
                </div>
                <div class="form-group">
                    <label>Role</label>
                    <select class="form-control seletedEdit">
                        @*@{
                            foreach (var role in listRole)
                            {
                                <option value="@role.Id">@role.Type</option>
                            }
                        }*@
                    </select>
                </div>
                <input type="hidden" class="form-control" name="RoleType">
                <input type="hidden" class="form-control" name="IdUser">
                <button type="submit" class="btn btn-success btn-submit">Submit</button>
            </form>
        </div>
    </div>
}

<script src="~/Areas/Admin/js/vendor/jquery-2.1.4.min.js"></script>
<script src="~/Areas/Admin/js/popper.min.js"></script>
<script src="~/Areas/Admin/js/plugins.js"></script>
<script src="~/Areas/Admin/js/main.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<script>
    // Get the modal
    var modal = document.getElementById('myModal');
    var modalEdit = document.getElementById('myModalEdit');

    // Get the button that opens the modal
    var btn = document.getElementById("AddAccount");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];
    var spanEdit = document.getElementsByClassName("close")[1];

    // When the user clicks the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }
    spanEdit.onclick = function () {
        modalEdit.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
        if (event.target == modalEdit) {
            modalEdit.style.display = "none";
        }
    }

    function validateForm() {
        var a = $('input[name=UserName]').val();
        $('input[name=RoleType]').val($('select').find(":selected").val());

        if (a == null || a === "") {
            alert("Please Fill All Required Field");
            return false;
        }
        return true;
    };

    function validateFormAdd() {
        var a = $('input[name=UserName]').val();
        $('input[name=RoleType]').val($('select').find(":selected").val());

        if (a == null || a === "") {
            alert("Please Fill All Required Field");
            return false;
        }
        if (@acountLogin.RoleType != 4 && $('input[name=RoleType]').val() == 4) {
            alert("You can't permission create user have type Supper Admin");
            return false;
        }
        return true;
    };

    $(".delete-account").click(function() {
        var x = confirm("Do you want delete this user!");
        if (x) {
            var id = $(this).attr("data-id");
            $.ajax({
                type: 'POST',
                url: '@Url.Action($"DeleteAccount", $"Table")',
                dataType: 'json',
                data: { id: id },
                success: function (data, textStatus, jqXHR) {
                    if (data.success) {
                        alert(data.mess);
                        location.reload();
                    }
                    else {
                        alert(data.mess);
                    }
                },
                error: function () {
                    alert("Error: " + response.status + " - " + response.statusText);
                }
            });
        }
    });

    function validateFormEdit() {
        var form = $("#myModalEdit").find("form");
        var a = $(form).find('input[name=UserName]').val();
        $(form).find('input[name=RoleType]').val($(form).find('select').find(":selected").val());

        if (a == null || a === "") {
            alert("Please Fill All Required Field");
            return false;
        }
        if (@acountLogin.RoleType != 4 && $(form).find('input[name=RoleType]').val() == 4) {
            alert("You can't permission create user have type Supper Admin");
            return false;
        }
        return true;
    };

    $(".edit-account").click(function () {
        modalEdit.style.display = "block";
        $(".seletedEdit").html("");
        var id = $(this).attr("data-id");
        var tr = $(this).parent().parent();
        var form = $("#myModalEdit").find("form");

        $(form).find('input[name=UserName]').val($($(tr).find("td")[1]).text().trim());
        $(form).find('input[name=Email]').val($($(tr).find("td")[2]).text().trim());
        var role = $($(tr).find("td")[3]).text();

        var appen = "";

        $.each($(".listRoleAdd"), function (index1, value) {
            $.each(value, function (index, results) {
                if ($(this).text() == role) {
                    appen += "<option value='" + $(this).val() + "' selected='selected' readonly>" + $(this).text() + "</option>";
                }
                else
                    appen += "<option value='" + $(this).val() + "'>" + $(this).text() + "</option>";
            });
            
        });
        $(".seletedEdit").append(appen);
        if (role == "super_admin")
            $(".seletedEdit").attr("disabled", true);
        else
            $(".seletedEdit").attr("disabled", false);

    });


</script>